//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebUI.WcfVenueServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VenueDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class VenueDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InvalidEventException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.CustomExceptions")]
    [System.SerializableAttribute()]
    public partial class InvalidEventException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomError {
            get {
                return this.CustomErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomErrorField, value) != true)) {
                    this.CustomErrorField = value;
                    this.RaisePropertyChanged("CustomError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CanNotCreateEventSeatException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.CustomExceptions")]
    [System.SerializableAttribute()]
    public partial class CanNotCreateEventSeatException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomError {
            get {
                return this.CustomErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomErrorField, value) != true)) {
                    this.CustomErrorField = value;
                    this.RaisePropertyChanged("CustomError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CanNotDeleteEventException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.CustomExceptions")]
    [System.SerializableAttribute()]
    public partial class CanNotDeleteEventException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomErrorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomError {
            get {
                return this.CustomErrorField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomErrorField, value) != true)) {
                    this.CustomErrorField = value;
                    this.RaisePropertyChanged("CustomError");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfVenueServiceReference.IVenueService")]
    public interface IVenueService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/Create", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/CreateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WebUI.WcfVenueServiceReference.InvalidEventException), Action="http://tempuri.org/IServiceOf_VenueDTO/CreateInvalidEventExceptionFault", Name="InvalidEventException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.CustomExceptions")]
        void Create(WebUI.WcfVenueServiceReference.VenueDTO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/Create", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(WebUI.WcfVenueServiceReference.VenueDTO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/Delete", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/DeleteResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WebUI.WcfVenueServiceReference.CanNotCreateEventSeatException), Action="http://tempuri.org/IServiceOf_VenueDTO/DeleteCanNotCreateEventSeatExceptionFault", Name="CanNotCreateEventSeatException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.CustomExceptions")]
        [System.ServiceModel.FaultContractAttribute(typeof(WebUI.WcfVenueServiceReference.CanNotDeleteEventException), Action="http://tempuri.org/IServiceOf_VenueDTO/DeleteCanNotDeleteEventExceptionFault", Name="CanNotDeleteEventException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.CustomExceptions")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/Delete", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/Update", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/UpdateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(WebUI.WcfVenueServiceReference.InvalidEventException), Action="http://tempuri.org/IServiceOf_VenueDTO/UpdateInvalidEventExceptionFault", Name="InvalidEventException", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.CustomExceptions")]
        void Update(WebUI.WcfVenueServiceReference.VenueDTO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/Update", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(WebUI.WcfVenueServiceReference.VenueDTO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/GetById", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/GetByIdResponse")]
        WebUI.WcfVenueServiceReference.VenueDTO GetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/GetById", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/GetByIdResponse")]
        System.Threading.Tasks.Task<WebUI.WcfVenueServiceReference.VenueDTO> GetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/GetAll", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/GetAllResponse")]
        WebUI.WcfVenueServiceReference.VenueDTO[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOf_VenueDTO/GetAll", ReplyAction="http://tempuri.org/IServiceOf_VenueDTO/GetAllResponse")]
        System.Threading.Tasks.Task<WebUI.WcfVenueServiceReference.VenueDTO[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/CreateVenues", ReplyAction="http://tempuri.org/IVenueService/CreateVenuesResponse")]
        void CreateVenues(WebUI.WcfVenueServiceReference.VenueDTO[] venueDTOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/CreateVenues", ReplyAction="http://tempuri.org/IVenueService/CreateVenuesResponse")]
        System.Threading.Tasks.Task CreateVenuesAsync(WebUI.WcfVenueServiceReference.VenueDTO[] venueDTOs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/GetByName", ReplyAction="http://tempuri.org/IVenueService/GetByNameResponse")]
        WebUI.WcfVenueServiceReference.VenueDTO GetByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/GetByName", ReplyAction="http://tempuri.org/IVenueService/GetByNameResponse")]
        System.Threading.Tasks.Task<WebUI.WcfVenueServiceReference.VenueDTO> GetByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/IsNameUnique", ReplyAction="http://tempuri.org/IVenueService/IsNameUniqueResponse")]
        bool IsNameUnique(WebUI.WcfVenueServiceReference.VenueDTO obj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVenueService/IsNameUnique", ReplyAction="http://tempuri.org/IVenueService/IsNameUniqueResponse")]
        System.Threading.Tasks.Task<bool> IsNameUniqueAsync(WebUI.WcfVenueServiceReference.VenueDTO obj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVenueServiceChannel : WebUI.WcfVenueServiceReference.IVenueService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VenueServiceClient : System.ServiceModel.ClientBase<WebUI.WcfVenueServiceReference.IVenueService>, WebUI.WcfVenueServiceReference.IVenueService {
        
        public VenueServiceClient() {
        }
        
        public VenueServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VenueServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VenueServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VenueServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Create(WebUI.WcfVenueServiceReference.VenueDTO obj) {
            base.Channel.Create(obj);
        }
        
        public System.Threading.Tasks.Task CreateAsync(WebUI.WcfVenueServiceReference.VenueDTO obj) {
            return base.Channel.CreateAsync(obj);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public void Update(WebUI.WcfVenueServiceReference.VenueDTO obj) {
            base.Channel.Update(obj);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(WebUI.WcfVenueServiceReference.VenueDTO obj) {
            return base.Channel.UpdateAsync(obj);
        }
        
        public WebUI.WcfVenueServiceReference.VenueDTO GetById(int id) {
            return base.Channel.GetById(id);
        }
        
        public System.Threading.Tasks.Task<WebUI.WcfVenueServiceReference.VenueDTO> GetByIdAsync(int id) {
            return base.Channel.GetByIdAsync(id);
        }
        
        public WebUI.WcfVenueServiceReference.VenueDTO[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WebUI.WcfVenueServiceReference.VenueDTO[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void CreateVenues(WebUI.WcfVenueServiceReference.VenueDTO[] venueDTOs) {
            base.Channel.CreateVenues(venueDTOs);
        }
        
        public System.Threading.Tasks.Task CreateVenuesAsync(WebUI.WcfVenueServiceReference.VenueDTO[] venueDTOs) {
            return base.Channel.CreateVenuesAsync(venueDTOs);
        }
        
        public WebUI.WcfVenueServiceReference.VenueDTO GetByName(string name) {
            return base.Channel.GetByName(name);
        }
        
        public System.Threading.Tasks.Task<WebUI.WcfVenueServiceReference.VenueDTO> GetByNameAsync(string name) {
            return base.Channel.GetByNameAsync(name);
        }
        
        public bool IsNameUnique(WebUI.WcfVenueServiceReference.VenueDTO obj) {
            return base.Channel.IsNameUnique(obj);
        }
        
        public System.Threading.Tasks.Task<bool> IsNameUniqueAsync(WebUI.WcfVenueServiceReference.VenueDTO obj) {
            return base.Channel.IsNameUniqueAsync(obj);
        }
    }
}
