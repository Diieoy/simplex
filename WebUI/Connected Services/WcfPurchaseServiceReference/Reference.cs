//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebUI.WcfPurchaseServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class OrderDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeOrder {
            get {
                return this.DateTimeOrderField;
            }
            set {
                if ((this.DateTimeOrderField.Equals(value) != true)) {
                    this.DateTimeOrderField = value;
                    this.RaisePropertyChanged("DateTimeOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeatId {
            get {
                return this.SeatIdField;
            }
            set {
                if ((this.SeatIdField.Equals(value) != true)) {
                    this.SeatIdField = value;
                    this.RaisePropertyChanged("SeatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PurchaseDTO", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibrary.DTO")]
    [System.SerializableAttribute()]
    public partial class PurchaseDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventSeatIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventSeatId {
            get {
                return this.EventSeatIdField;
            }
            set {
                if ((this.EventSeatIdField.Equals(value) != true)) {
                    this.EventSeatIdField = value;
                    this.RaisePropertyChanged("EventSeatId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfPurchaseServiceReference.IPurchaseService")]
    public interface IPurchaseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/AddOrder", ReplyAction="http://tempuri.org/IPurchaseService/AddOrderResponse")]
        void AddOrder(WebUI.WcfPurchaseServiceReference.OrderDTO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/AddOrder", ReplyAction="http://tempuri.org/IPurchaseService/AddOrderResponse")]
        System.Threading.Tasks.Task AddOrderAsync(WebUI.WcfPurchaseServiceReference.OrderDTO order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/GetAllOrdersByUserId", ReplyAction="http://tempuri.org/IPurchaseService/GetAllOrdersByUserIdResponse")]
        WebUI.WcfPurchaseServiceReference.OrderDTO[] GetAllOrdersByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/GetAllOrdersByUserId", ReplyAction="http://tempuri.org/IPurchaseService/GetAllOrdersByUserIdResponse")]
        System.Threading.Tasks.Task<WebUI.WcfPurchaseServiceReference.OrderDTO[]> GetAllOrdersByUserIdAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/AddPurchase", ReplyAction="http://tempuri.org/IPurchaseService/AddPurchaseResponse")]
        void AddPurchase(WebUI.WcfPurchaseServiceReference.PurchaseDTO purchase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/AddPurchase", ReplyAction="http://tempuri.org/IPurchaseService/AddPurchaseResponse")]
        System.Threading.Tasks.Task AddPurchaseAsync(WebUI.WcfPurchaseServiceReference.PurchaseDTO purchase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/DeletePurchaseByEventSeatId", ReplyAction="http://tempuri.org/IPurchaseService/DeletePurchaseByEventSeatIdResponse")]
        void DeletePurchaseByEventSeatId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/DeletePurchaseByEventSeatId", ReplyAction="http://tempuri.org/IPurchaseService/DeletePurchaseByEventSeatIdResponse")]
        System.Threading.Tasks.Task DeletePurchaseByEventSeatIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/GetAllPurchasesByUserId", ReplyAction="http://tempuri.org/IPurchaseService/GetAllPurchasesByUserIdResponse")]
        WebUI.WcfPurchaseServiceReference.PurchaseDTO[] GetAllPurchasesByUserId(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/GetAllPurchasesByUserId", ReplyAction="http://tempuri.org/IPurchaseService/GetAllPurchasesByUserIdResponse")]
        System.Threading.Tasks.Task<WebUI.WcfPurchaseServiceReference.PurchaseDTO[]> GetAllPurchasesByUserIdAsync(string userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/GetPurchaseByEventSeatId", ReplyAction="http://tempuri.org/IPurchaseService/GetPurchaseByEventSeatIdResponse")]
        WebUI.WcfPurchaseServiceReference.PurchaseDTO GetPurchaseByEventSeatId(int eventSeatId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPurchaseService/GetPurchaseByEventSeatId", ReplyAction="http://tempuri.org/IPurchaseService/GetPurchaseByEventSeatIdResponse")]
        System.Threading.Tasks.Task<WebUI.WcfPurchaseServiceReference.PurchaseDTO> GetPurchaseByEventSeatIdAsync(int eventSeatId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPurchaseServiceChannel : WebUI.WcfPurchaseServiceReference.IPurchaseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PurchaseServiceClient : System.ServiceModel.ClientBase<WebUI.WcfPurchaseServiceReference.IPurchaseService>, WebUI.WcfPurchaseServiceReference.IPurchaseService {
        
        public PurchaseServiceClient() {
        }
        
        public PurchaseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PurchaseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PurchaseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PurchaseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddOrder(WebUI.WcfPurchaseServiceReference.OrderDTO order) {
            base.Channel.AddOrder(order);
        }
        
        public System.Threading.Tasks.Task AddOrderAsync(WebUI.WcfPurchaseServiceReference.OrderDTO order) {
            return base.Channel.AddOrderAsync(order);
        }
        
        public WebUI.WcfPurchaseServiceReference.OrderDTO[] GetAllOrdersByUserId(string userId) {
            return base.Channel.GetAllOrdersByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<WebUI.WcfPurchaseServiceReference.OrderDTO[]> GetAllOrdersByUserIdAsync(string userId) {
            return base.Channel.GetAllOrdersByUserIdAsync(userId);
        }
        
        public void AddPurchase(WebUI.WcfPurchaseServiceReference.PurchaseDTO purchase) {
            base.Channel.AddPurchase(purchase);
        }
        
        public System.Threading.Tasks.Task AddPurchaseAsync(WebUI.WcfPurchaseServiceReference.PurchaseDTO purchase) {
            return base.Channel.AddPurchaseAsync(purchase);
        }
        
        public void DeletePurchaseByEventSeatId(int id) {
            base.Channel.DeletePurchaseByEventSeatId(id);
        }
        
        public System.Threading.Tasks.Task DeletePurchaseByEventSeatIdAsync(int id) {
            return base.Channel.DeletePurchaseByEventSeatIdAsync(id);
        }
        
        public WebUI.WcfPurchaseServiceReference.PurchaseDTO[] GetAllPurchasesByUserId(string userId) {
            return base.Channel.GetAllPurchasesByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<WebUI.WcfPurchaseServiceReference.PurchaseDTO[]> GetAllPurchasesByUserIdAsync(string userId) {
            return base.Channel.GetAllPurchasesByUserIdAsync(userId);
        }
        
        public WebUI.WcfPurchaseServiceReference.PurchaseDTO GetPurchaseByEventSeatId(int eventSeatId) {
            return base.Channel.GetPurchaseByEventSeatId(eventSeatId);
        }
        
        public System.Threading.Tasks.Task<WebUI.WcfPurchaseServiceReference.PurchaseDTO> GetPurchaseByEventSeatIdAsync(int eventSeatId) {
            return base.Channel.GetPurchaseByEventSeatIdAsync(eventSeatId);
        }
    }
}
